{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xB169059172afCad01AE10db127c72c57cc4d5Fde",
      "txHash": "0x30c0222fb7dcc2a89c095775f2e03857920f9cec1a86293d42cc597766f279fd",
      "kind": "uups"
    },
    {
      "address": "0xe0FE43380A1852e354bE7b055eC95e45DB9112d5",
      "txHash": "0x610ac65157af104ce36f2e68fa65b1324dccb5aeacd3266aa47e4250eb4f8c85",
      "kind": "uups"
    },
    {
      "address": "0x588F555CFc0c06864Ed006E78624Bb94B30aEd85",
      "txHash": "0xc2b4033789686ac331baeaac899978ee9ae17c1ce9a9a12b51158a784ce69fd2",
      "kind": "uups"
    },
    {
      "address": "0x46D17f40e1027B94a69B642839582AD8655Df669",
      "txHash": "0xadb4d1252f3d6b579102f05a98d149244355e6f76ea69efe504bd715ad15f9f9",
      "kind": "uups"
    }
  ],
  "impls": {
    "b2aa1fbfcafc8c9a8716a760f3bee33d3ef34424af0b7dce4a740621a17f631b": {
      "address": "0x540cA86956Ea9A56b63E2045Bb35adBc832bf519",
      "txHash": "0x51f480f1682220e82648f291096fda6c8eba14d13081edfbaa723fcfeb14ee5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/ChainIdHolding.sol:8"
          },
          {
            "contract": "CrossChainStableCoinLP",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts/CrossChainStableCoinLP.sol:21"
          },
          {
            "contract": "CrossChainStableCoinLP",
            "label": "balanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/CrossChainStableCoinLP.sol:22"
          },
          {
            "contract": "CrossChainStableCoinLP",
            "label": "allowance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/CrossChainStableCoinLP.sol:23"
          },
          {
            "contract": "CrossChainStableCoinLP",
            "label": "DOMAIN_SEPARATOR",
            "type": "t_bytes32",
            "src": "contracts/CrossChainStableCoinLP.sol:25"
          },
          {
            "contract": "CrossChainStableCoinLP",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/CrossChainStableCoinLP.sol:29"
          },
          {
            "contract": "CrossChainStableCoinPool",
            "label": "totalPoolValue",
            "type": "t_uint256",
            "src": "contracts/CrossChainStableCoinPool.sol:38"
          },
          {
            "contract": "CrossChainStableCoinPool",
            "label": "swapFee",
            "type": "t_uint256",
            "src": "contracts/CrossChainStableCoinPool.sol:39"
          },
          {
            "contract": "CrossChainStableCoinPool",
            "label": "buyBackTreasury",
            "type": "t_uint256",
            "src": "contracts/CrossChainStableCoinPool.sol:40"
          },
          {
            "contract": "CrossChainStableCoinPool",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts/CrossChainStableCoinPool.sol:41"
          },
          {
            "contract": "CrossChainStableCoinPool",
            "label": "stableCoinList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/CrossChainStableCoinPool.sol:47"
          },
          {
            "contract": "CrossChainStableCoinPool",
            "label": "decimals0",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "contracts/CrossChainStableCoinPool.sol:48"
          },
          {
            "contract": "CrossChainStableCoinPool",
            "label": "isEnableBuyBackTreasury",
            "type": "t_bool",
            "src": "contracts/CrossChainStableCoinPool.sol:53"
          },
          {
            "contract": "CrossChainStableCoinPool",
            "label": "convertedAmountsOut",
            "type": "t_array(t_uint256)3_storage",
            "src": "contracts/CrossChainStableCoinPool.sol:58"
          },
          {
            "contract": "CrossChainStableCoinPool",
            "label": "unlocked",
            "type": "t_uint256",
            "src": "contracts/CrossChainStableCoinPool.sol:60"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
